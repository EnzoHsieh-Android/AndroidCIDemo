name: Android CI

# 觸發條件
on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master" ]

# 環境變數
env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4096m -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  test:
    name: 單元測試
    runs-on: ubuntu-latest

    steps:
      - name: 檢出程式碼
        uses: actions/checkout@v4

      - name: 設定JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: 設定Gradle快取
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 賦予Gradle執行權限
        run: chmod +x gradlew

      - name: 執行單元測試
        run: ./gradlew test --stacktrace

      - name: 上傳測試報告
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: app/build/reports/tests/

  build:
    name: 建置APK
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 檢出程式碼
        uses: actions/checkout@v4

      - name: 設定JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: 設定Gradle快取
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 賦予Gradle執行權限
        run: chmod +x gradlew

      - name: 建置Debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: 顯示建置資訊
        run: ./gradlew buildInfo

      - name: 上傳Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk

  lint:
    name: 程式碼檢查
    runs-on: ubuntu-latest

    steps:
      - name: 檢出程式碼
        uses: actions/checkout@v4

      - name: 設定JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: 設定Gradle快取
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 賦予Gradle執行權限
        run: chmod +x gradlew

      - name: 執行Lint檢查
        run: ./gradlew lintDebug --stacktrace

      - name: 上傳Lint報告
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-reports
          path: app/build/reports/lint-results-debug.html