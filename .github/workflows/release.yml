name: Android Release

# 觸發條件：當推送tag時
on:
  push:
    tags:
      - 'v*.*.*'  # 符合 v1.0.0 格式的tag

# 環境變數
env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4096m -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  release:
    name: 建置Release版本
    runs-on: ubuntu-latest

    steps:
      - name: 檢出程式碼
        uses: actions/checkout@v4

      - name: 設定JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 設定Gradle快取
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 賦予Gradle執行權限
        run: chmod +x gradlew

      - name: 解碼並設定Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > release-keystore.jks
          echo "storeFile=release-keystore.jks" > keystore.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> keystore.properties

      - name: 執行測試
        run: ./gradlew test --stacktrace

      - name: 建置Release APK
        run: ./gradlew assembleRelease --stacktrace

      - name: 重新命名APK
        run: |
          cd app/build/outputs/apk/release
          for file in *.apk; do
            if [[ -f "$file" ]]; then
              new_name="${file/release/release-${{ github.ref_name }}}"
              mv "$file" "$new_name"
              echo "重新命名: $file -> $new_name"
            fi
          done
          ls -la *.apk

      - name: 計算檔案雜湊值
        run: |
          cd app/build/outputs/apk/release
          for file in *.apk; do
            if [[ -f "$file" ]]; then
              sha256sum "$file" > "$file.sha256"
              echo "Created checksum for $file"
            fi
          done

      - name: 建立GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/apk/release/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: 發布通知
    runs-on: ubuntu-latest
    needs: release
    if: always()

    steps:
      - name: 發布成功通知
        if: needs.release.result == 'success'
        run: |
          echo "✅ Release ${{ github.ref_name }} 建置成功！"
          echo "APK已上傳到GitHub Releases"

      - name: 發布失敗通知
        if: needs.release.result == 'failure'
        run: |
          echo "❌ Release ${{ github.ref_name }} 建置失敗！"
          echo "請檢查建置日誌"